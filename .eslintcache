[{"D:\\React\\ReactProject\\React-POS\\src\\index.js":"1","D:\\React\\ReactProject\\React-POS\\src\\App.js":"2","D:\\React\\ReactProject\\React-POS\\src\\reportWebVitals.js":"3","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\listItem.js":"4","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ListItem.js":"5","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\NotFound.js":"6","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\AddCategory.js":"7","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\EditCategory.js":"8","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\Category.js":"9","D:\\React\\ReactProject\\React-POS\\src\\Services\\CategoryService.js":"10","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\TextError.js":"11","D:\\React\\ReactProject\\React-POS\\src\\Services\\ProductService.js":"12","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\AddProduct.js":"13","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\EditProduct.js":"14","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\Product.js":"15","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\TextError.js":"16","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductList.js":"17","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductNotFound.js":"18","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\Dashboard.js":"19","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\CategoryList.js":"20","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ShowProduct.js":"21","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\CartProduct.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":298,"mtime":1610199420840,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1025,"mtime":1609940104518,"results":"27","hashOfConfig":"24"},{"size":1302,"mtime":1610447310012,"results":"28","hashOfConfig":"24"},{"size":8605,"mtime":1610099456983,"results":"29","hashOfConfig":"24"},{"size":1776,"mtime":1610346645650,"results":"30","hashOfConfig":"24"},{"size":2507,"mtime":1610348059948,"results":"31","hashOfConfig":"24"},{"size":1007,"mtime":1610043894795,"results":"32","hashOfConfig":"24"},{"size":542,"mtime":1609949183947,"results":"33","hashOfConfig":"24"},{"size":183,"mtime":1610040635457,"results":"34","hashOfConfig":"24"},{"size":535,"mtime":1609949230408,"results":"35","hashOfConfig":"24"},{"size":5685,"mtime":1610383793303,"results":"36","hashOfConfig":"24"},{"size":6918,"mtime":1610384929469,"results":"37","hashOfConfig":"24"},{"size":1426,"mtime":1610128492358,"results":"38","hashOfConfig":"24"},{"size":183,"mtime":1610044296085,"results":"39","hashOfConfig":"24"},{"size":6830,"mtime":1610441206570,"results":"40","hashOfConfig":"24"},{"size":8619,"mtime":1610102128853,"results":"41","hashOfConfig":"24"},{"size":6565,"mtime":1610447359346,"results":"42","hashOfConfig":"24"},{"size":4775,"mtime":1610441314707,"results":"43","hashOfConfig":"24"},{"size":3252,"mtime":1610434353111,"results":"44","hashOfConfig":"24"},{"size":3722,"mtime":1610439907871,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"o255au",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React\\ReactProject\\React-POS\\src\\index.js",[],["97","98"],"D:\\React\\ReactProject\\React-POS\\src\\App.js",[],"D:\\React\\ReactProject\\React-POS\\src\\reportWebVitals.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\listItem.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ListItem.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\NotFound.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\AddCategory.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\EditCategory.js",["99"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Category.css';\r\nimport { editCategoryService, getCategoryServiceById } from \"../../../Services/CategoryService\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst EditCategory = () => {\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [category, setCategory] = useState({\r\n        name: \"\"\r\n    });\r\n    const handleChange = e => {\r\n        setCategory({ ...category, [e.target.name]: e.target.value })\r\n    };\r\n    const initialValues = {\r\n        name: \"\"\r\n    };\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('CategoryName is Reuired')\r\n    })\r\n    const onSubmit = async values => {\r\n        await editCategoryService(id, values)\r\n        history.push(\"/Category\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const loadCategory = async () => {\r\n        await getCategoryServiceById(id)\r\n            .then(res => setCategory(res.data))\r\n            .catch(err => {\r\n                history.push(\"/NotFound\");\r\n            })\r\n    };\r\n    const { name } = category;\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5 AddStyle\" >\r\n                <h2 className=\"text-center mb-4\">Edit A Category</h2>\r\n                <Formik initialValues={category || initialValues}\r\n                    onSubmit={onSubmit} loadCategory={loadCategory}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}>\r\n                    {\r\n                        formik => (\r\n                            <Form>\r\n                                <div >\r\n                                    <label>Category Name</label>\r\n                                    <Field name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder='Enter Category Name' />\r\n                                    <ErrorMessage name=\"name\" component={TextError} />\r\n                                </div>\r\n                                <button type='submit' disabled={!formik.isValid} className=\"btn btn-warning btn-block \">Edit Category</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCategory","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\Category.js",["100","101"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getCategoryServiceById } from \"../../../Services/CategoryService\";\r\n\r\nconst Category = () => {\r\n    let history = useHistory();\r\n    const [category, setCategory] = useState({\r\n        name: \"\"\r\n    });\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const loadCategory = async () => {\r\n        await getCategoryServiceById(id)\r\n            .then(res => setCategory(res.data))\r\n            .catch(err => {\r\n                history.push(\"/NotFound\");\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h1 className=\"display-4\">Category Id: {id}</h1>\r\n            <hr />\r\n            <ul className=\"list-group w-50\">\r\n                <li className=\"list-group-item\">CategoryName: {category.name}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Category;","D:\\React\\ReactProject\\React-POS\\src\\Services\\CategoryService.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\TextError.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Services\\ProductService.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\AddProduct.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\EditProduct.js",["102","103"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Product.css';\r\nimport { editProductService, getProductServiceById} from \"../../../Services/ProductService\";\r\nimport { getCategoryService } from \"../../../Services/CategoryService\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst EditProduct = () => {\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [categories, setCategory] = useState([]);\r\n    const [product, setProduct] = useState({\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        selectOption: '',\r\n        gst: \"\",\r\n        discount: \"\",\r\n        image:\"\"\r\n    });\r\n    const handleChange = e => {\r\n        setProduct({ ...product, [e.target.name]: e.target.value })\r\n    };\r\n//    const  handleFileUpload = (event) => {\r\n//         setProduct({image: event.currentTarget.files[0]})}\r\n//         }\r\n    \r\n    const initialValues = {\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        selectOption: '',\r\n        gst: \"\",\r\n        discount: \"\",\r\n        image:\"\"\r\n    };\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('ProductName is Reuired'),\r\n        image:Yup.mixed().required('Product image is Required'),\r\n        price: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A price number can't start with a minus\").required('Price is Reuired'),\r\n        quantity: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A price  can't start with a minus\")\r\n            .integer(\"A price  can't include a decimal point\").required('Quantity is Reuired'),\r\n        selectOption: Yup.string().required('Select Category is Reuired'),\r\n        gst: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A GST number can't start with a minus\")\r\n            .integer(\"A GST number can't include a decimal point\").required('GST is Reuired'),\r\n        discount: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A discount number can't start with a minus\")\r\n            .integer(\"A discount number can't include a decimal point\").required('Discount is Reuired')\r\n    })\r\n    const onSubmit = async values => {\r\n        await editProductService(id, values)\r\n        history.push(\"/Product\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProduct();\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const loadProduct = async () => {\r\n        await getProductServiceById(id)\r\n            .then(res => setProduct(res.data))\r\n            .catch(err => {\r\n                history.push(\"/ProductNotFound\");\r\n            })\r\n    };\r\n    const loadCategories = async () => {\r\n        const result = await getCategoryService()\r\n        setCategory(result.data.reverse());\r\n\r\n    };\r\n\r\n    const { name, price, quantity, selectOption, gst, discount,image } = product;\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5 AddStyle\" >\r\n                <h2 className=\"text-center mb-4\">Edit A Product</h2>\r\n                <Formik initialValues={product || initialValues}\r\n                    onSubmit={onSubmit} loadProduct={loadProduct}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}>\r\n                    {\r\n                        formik => (\r\n                            <Form>\r\n                                <div >\r\n                                    <label>Product Name</label>\r\n                                    <Field name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder='Enter Product Name' />\r\n                                    <ErrorMessage name=\"name\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Price </label>\r\n                                    <Field name=\"price\" value={price} onChange={handleChange} type=\"text\" placeholder=' Price' />\r\n                                    <ErrorMessage name=\"price\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Quantity </label>\r\n                                    <Field name=\"quantity\" value={quantity} onChange={handleChange} type=\"text\" placeholder=' Quantity' />\r\n                                    <ErrorMessage name=\"quantity\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Category Name</label>\r\n                                    <Field as='select' name='selectOption' value={selectOption} onChange={handleChange}>\r\n                                        <option value=''>Select Category</option>\r\n                                        {categories.map(Category => {\r\n                                            return (\r\n                                                <option key={Category.name} value={Category.id}>{Category.name}</option>\r\n                                            )\r\n                                        })}\r\n                                    </Field>\r\n                                    <ErrorMessage name=\"selectOption\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>GST </label>\r\n                                    <Field name=\"gst\" value={gst} onChange={handleChange} type=\"text\" placeholder=' GST' />\r\n                                    <ErrorMessage name=\"gst\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Discount</label>\r\n                                    <Field name=\"discount\" value={discount} onChange={handleChange} type=\"text\" placeholder=' Discount' />\r\n                                    <ErrorMessage name=\"discount\" component={TextError} />\r\n                                </div>\r\n                                {/* <div >\r\n                                    <label>Image</label>\r\n                                    <Field name=\"image\" value={image} onChange={handleChange} type=\"file\" placeholder='image' />\r\n                                    <ErrorMessage name=\"image\" component={TextError} />\r\n                                </div> */}\r\n                                <button type='submit' disabled={!formik.isValid} className=\"btn btn-warning btn-block \">Edit Product</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProduct","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\Product.js",["104","105"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getProductServiceById } from \"../../../Services/ProductService\";\r\n\r\nconst Product = () => {\r\n    let history = useHistory();\r\n    const [product, setProduct] = useState({\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        selectOption: '',\r\n        gst: \"\",\r\n        discount: \"\"\r\n    });\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadProduct();\r\n    }, []);\r\n\r\n    const loadProduct = async () => {\r\n        await getProductServiceById(id)\r\n            .then(res => setProduct(res.data))\r\n            .catch(err => {\r\n                history.push(\"/ProductNotFound\");\r\n            })\r\n    };\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h1 className=\"display-4\">Product Id: {id}</h1>\r\n            <hr />\r\n            <ul className=\"list-group w-50\">\r\n                <li className=\"list-group-item\">ProductName: {product.name}</li>\r\n                <li className=\"list-group-item\">Price: {product.price}</li>\r\n                <li className=\"list-group-item\">Quantity: {product.quantity}</li>\r\n                <li className=\"list-group-item\">GST: {product.gst}</li>\r\n                <li className=\"list-group-item\">Discount: {product.discount}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\TextError.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductList.js",["106","107","108","109","110","111"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProductService, deleteProductServiceById } from \"../../../Services/ProductService\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport '../../Products/ProductList/Product.css';\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ntoast.configure()\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: 'auto',\r\n        marginTop: 50\r\n    },\r\n    paper: {\r\n        marginTop:44,\r\n        width: '80%',\r\n        margin: 'auto'\r\n    },\r\n    head: {\r\n        backgroundColor: 'darkblue'\r\n    },\r\n    headcolor: {\r\n        color: 'white'\r\n    },\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function ProductList() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]);\r\n   \r\n    //const [open, setOpen] = React.useState(false);\r\n\r\n//   const handleClickOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, []);\r\n\r\n    const loadProducts = async () => {\r\n        const result = await getProductService()\r\n        setProducts(result.data.reverse());\r\n\r\n    };\r\n    const deleteProduct = async id => {  \r\n         if (window.confirm(\"Do you want to continue ?\")) {\r\n            await deleteProductServiceById(id)\r\n            toast.success('Deleted successfully!')\r\n            history.push(\"/Product\");\r\n        }\r\n        history.push(\"/Product\");\r\n    }\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TableContainer className={classes.paper} component={Paper}>\r\n                <Link className=\"btn  btn-outline-primary AddBtn\" to=\"/products/add\">Add Product</Link>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead >\r\n                        <TableRow className={classes.head}>\r\n                            <TableCell className={classes.headcolor}>#</TableCell>\r\n                            <TableCell className={classes.headcolor}>Name</TableCell>\r\n                            <TableCell className={classes.headcolor}>Price(₹)</TableCell>\r\n                            <TableCell className={classes.headcolor}>Quantity</TableCell>\r\n                            <TableCell className={classes.headcolor}>GST(%)</TableCell>\r\n                            <TableCell className={classes.headcolor}>Discount</TableCell>\r\n                            <TableCell className={classes.headcolor}>Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {products\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((product, index) => (\r\n                                <TableRow key={product.id} className={classes.root}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell>{product.name}</TableCell>\r\n                                    <TableCell>{product.price}</TableCell>\r\n                                    <TableCell>{product.quantity}</TableCell>\r\n                                    <TableCell>{product.gst}</TableCell>\r\n                                    <TableCell>{product.discount}</TableCell>\r\n                                    <TableCell>\r\n                                        <Link className=\"btn fa fa-eye btn-primary mr-2\" to={`/products/${product.id}`}>View</Link>\r\n                                        <Link className=\"btn fa fa-edit btn-outline-primary mr-2\" to={`/products/edit/${product.id}`}> Edit</Link>\r\n                                         <Link className=\"btn fa fa-trash btn-danger mr-2\" to=\"\" onClick={deleteProduct}> Delete</Link> \r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={products.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            {/* <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={deleteProduct} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog> */}\r\n        </div>\r\n    );\r\n}\r\n","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductNotFound.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\Dashboard.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\CategoryList.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ShowProduct.js",["112","113"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, Card, CardHeader, CardMedia, CardContent, Typography, Link, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getProductService } from '../../Services/ProductService';\r\nimport CartProduct from './CartProduct';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n        margin: 'auto',\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n        marginLeft: '22px',\r\n        marginRight:'22px'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    gridContainer: {\r\n        paddingLeft: \"30px\",\r\n        paddingRight: \"30px\",\r\n        marginTop: 30\r\n    },\r\n    cost: {\r\n        float: \"left\",\r\n        marginLeft:'-15px'\r\n    },\r\n    quantity: {\r\n        float: \"right\",\r\n        marginRight:'-15px'\r\n    },\r\n    grid:{\r\n        marginRight:'-50px'\r\n    },\r\n    card:{\r\n        maxWidth: 150,\r\n        marginBottom:'20px'\r\n    }\r\n}))\r\n\r\nfunction ShowProduct() {\r\n    const classes = useStyles();\r\n    const [products, setProduct] = useState([]);\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, []);\r\n\r\n    const loadProducts = async () => {\r\n        const result = await getProductService()\r\n        setProduct(result.data);\r\n    };\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={3}\r\n            className={classes.gridContainer}\r\n            justify=\"center\"\r\n        >\r\n            <Grid item xs={12} sm={6} md={6}>    \r\n             <CartProduct />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={6} className={classes.grid}>\r\n                <Grid container\r\n                    justify=\"center\">\r\n                    {products.map(Product => {\r\n                        return (\r\n                            <Grid item xs={4} key={Product.id}  >\r\n                                <Card  className={classes.card}  >\r\n                                    <CardHeader\r\n                                        title={Product.name}\r\n                                    />\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={Product.image}\r\n                                        title={Product.name}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography variant=\"body2\" className={classes.cost} component=\"p\">\r\n                                            Cost(₹):{Product.price}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" className={classes.quantity} component=\"p\" >\r\n                                            Quantity:{Product.quantity}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n}\r\nexport default ShowProduct","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\CartProduct.js",["114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":31,"column":8,"nodeType":"121","endLine":31,"endColumn":10,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":1,"column":38,"nodeType":"125","messageId":"126","endLine":1,"endColumn":49},{"ruleId":"119","severity":1,"message":"120","line":14,"column":8,"nodeType":"121","endLine":14,"endColumn":10,"suggestions":"127"},{"ruleId":"119","severity":1,"message":"128","line":63,"column":8,"nodeType":"121","endLine":63,"endColumn":10,"suggestions":"129"},{"ruleId":"123","severity":1,"message":"130","line":78,"column":64,"nodeType":"125","messageId":"126","endLine":78,"endColumn":69},{"ruleId":"123","severity":1,"message":"124","line":1,"column":38,"nodeType":"125","messageId":"126","endLine":1,"endColumn":49},{"ruleId":"119","severity":1,"message":"128","line":19,"column":8,"nodeType":"121","endLine":19,"endColumn":10,"suggestions":"131"},{"ruleId":"123","severity":1,"message":"132","line":17,"column":8,"nodeType":"125","messageId":"126","endLine":17,"endColumn":14},{"ruleId":"123","severity":1,"message":"133","line":18,"column":8,"nodeType":"125","messageId":"126","endLine":18,"endColumn":14},{"ruleId":"123","severity":1,"message":"134","line":19,"column":8,"nodeType":"125","messageId":"126","endLine":19,"endColumn":21},{"ruleId":"123","severity":1,"message":"135","line":20,"column":8,"nodeType":"125","messageId":"126","endLine":20,"endColumn":21},{"ruleId":"123","severity":1,"message":"136","line":21,"column":8,"nodeType":"125","messageId":"126","endLine":21,"endColumn":25},{"ruleId":"123","severity":1,"message":"137","line":22,"column":8,"nodeType":"125","messageId":"126","endLine":22,"endColumn":19},{"ruleId":"123","severity":1,"message":"138","line":2,"column":70,"nodeType":"125","messageId":"126","endLine":2,"endColumn":74},{"ruleId":"123","severity":1,"message":"139","line":2,"column":76,"nodeType":"125","messageId":"126","endLine":2,"endColumn":81},{"ruleId":"123","severity":1,"message":"138","line":2,"column":93,"nodeType":"125","messageId":"126","endLine":2,"endColumn":97},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.","ArrayExpression",["142"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar",["143"],"React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["144"],"'image' is assigned a value but never used.",["145"],"'Dialog' is defined but never used.","'Button' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Link' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"146","fix":"148"},{"desc":"149","fix":"150"},{"desc":"149","fix":"151"},"Update the dependencies array to be: [loadCategory]",{"range":"152","text":"153"},{"range":"154","text":"153"},"Update the dependencies array to be: [loadProduct]",{"range":"155","text":"156"},{"range":"157","text":"156"},[1006,1008],"[loadCategory]",[428,430],[2568,2570],"[loadProduct]",[533,535]]