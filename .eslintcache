[{"D:\\React\\ReactProject\\React-POS\\src\\index.js":"1","D:\\React\\ReactProject\\React-POS\\src\\App.js":"2","D:\\React\\ReactProject\\React-POS\\src\\reportWebVitals.js":"3","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\listItem.js":"4","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ListItem.js":"5","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\NotFound.js":"6","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\AddCategory.js":"7","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\EditCategory.js":"8","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\Category.js":"9","D:\\React\\ReactProject\\React-POS\\src\\Services\\CategoryService.js":"10","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\TextError.js":"11","D:\\React\\ReactProject\\React-POS\\src\\Services\\ProductService.js":"12","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\AddProduct.js":"13","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\EditProduct.js":"14","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\Product.js":"15","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\TextError.js":"16","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductList.js":"17","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductNotFound.js":"18","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\Dashboard.js":"19","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\CategoryList.js":"20","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ShowProduct.js":"21","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\CartProduct.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":298,"mtime":1610199420840,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1025,"mtime":1609940104518,"results":"27","hashOfConfig":"24"},{"size":1302,"mtime":1610447310012,"results":"28","hashOfConfig":"24"},{"size":8605,"mtime":1610099456983,"results":"29","hashOfConfig":"24"},{"size":1776,"mtime":1610346645650,"results":"30","hashOfConfig":"24"},{"size":2507,"mtime":1610348059948,"results":"31","hashOfConfig":"24"},{"size":1007,"mtime":1610043894795,"results":"32","hashOfConfig":"24"},{"size":542,"mtime":1609949183947,"results":"33","hashOfConfig":"24"},{"size":183,"mtime":1610040635457,"results":"34","hashOfConfig":"24"},{"size":535,"mtime":1609949230408,"results":"35","hashOfConfig":"24"},{"size":5685,"mtime":1610383793303,"results":"36","hashOfConfig":"24"},{"size":6918,"mtime":1610384929469,"results":"37","hashOfConfig":"24"},{"size":1426,"mtime":1610128492358,"results":"38","hashOfConfig":"24"},{"size":183,"mtime":1610044296085,"results":"39","hashOfConfig":"24"},{"size":6313,"mtime":1610456381088,"results":"40","hashOfConfig":"24"},{"size":8619,"mtime":1610102128853,"results":"41","hashOfConfig":"24"},{"size":6565,"mtime":1610447359346,"results":"42","hashOfConfig":"24"},{"size":5712,"mtime":1610456042506,"results":"43","hashOfConfig":"24"},{"size":4042,"mtime":1610477085147,"results":"44","hashOfConfig":"24"},{"size":5175,"mtime":1610478663934,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"o255au",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React\\ReactProject\\React-POS\\src\\index.js",[],["95","96"],"D:\\React\\ReactProject\\React-POS\\src\\App.js",[],"D:\\React\\ReactProject\\React-POS\\src\\reportWebVitals.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\listItem.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ListItem.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\NotFound.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\AddCategory.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\EditCategory.js",["97"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Category.css';\r\nimport { editCategoryService, getCategoryServiceById } from \"../../../Services/CategoryService\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst EditCategory = () => {\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [category, setCategory] = useState({\r\n        name: \"\"\r\n    });\r\n    const handleChange = e => {\r\n        setCategory({ ...category, [e.target.name]: e.target.value })\r\n    };\r\n    const initialValues = {\r\n        name: \"\"\r\n    };\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('CategoryName is Reuired')\r\n    })\r\n    const onSubmit = async values => {\r\n        await editCategoryService(id, values)\r\n        history.push(\"/Category\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const loadCategory = async () => {\r\n        await getCategoryServiceById(id)\r\n            .then(res => setCategory(res.data))\r\n            .catch(err => {\r\n                history.push(\"/NotFound\");\r\n            })\r\n    };\r\n    const { name } = category;\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5 AddStyle\" >\r\n                <h2 className=\"text-center mb-4\">Edit A Category</h2>\r\n                <Formik initialValues={category || initialValues}\r\n                    onSubmit={onSubmit} loadCategory={loadCategory}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}>\r\n                    {\r\n                        formik => (\r\n                            <Form>\r\n                                <div >\r\n                                    <label>Category Name</label>\r\n                                    <Field name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder='Enter Category Name' />\r\n                                    <ErrorMessage name=\"name\" component={TextError} />\r\n                                </div>\r\n                                <button type='submit' disabled={!formik.isValid} className=\"btn btn-warning btn-block \">Edit Category</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCategory","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\Category.js",["98","99"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getCategoryServiceById } from \"../../../Services/CategoryService\";\r\n\r\nconst Category = () => {\r\n    let history = useHistory();\r\n    const [category, setCategory] = useState({\r\n        name: \"\"\r\n    });\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const loadCategory = async () => {\r\n        await getCategoryServiceById(id)\r\n            .then(res => setCategory(res.data))\r\n            .catch(err => {\r\n                history.push(\"/NotFound\");\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h1 className=\"display-4\">Category Id: {id}</h1>\r\n            <hr />\r\n            <ul className=\"list-group w-50\">\r\n                <li className=\"list-group-item\">CategoryName: {category.name}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Category;","D:\\React\\ReactProject\\React-POS\\src\\Services\\CategoryService.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\TextError.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Services\\ProductService.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\AddProduct.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\EditProduct.js",["100","101"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Product.css';\r\nimport { editProductService, getProductServiceById} from \"../../../Services/ProductService\";\r\nimport { getCategoryService } from \"../../../Services/CategoryService\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst EditProduct = () => {\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [categories, setCategory] = useState([]);\r\n    const [product, setProduct] = useState({\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        selectOption: '',\r\n        gst: \"\",\r\n        discount: \"\",\r\n        image:\"\"\r\n    });\r\n    const handleChange = e => {\r\n        setProduct({ ...product, [e.target.name]: e.target.value })\r\n    };\r\n//    const  handleFileUpload = (event) => {\r\n//         setProduct({image: event.currentTarget.files[0]})}\r\n//         }\r\n    \r\n    const initialValues = {\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        selectOption: '',\r\n        gst: \"\",\r\n        discount: \"\",\r\n        image:\"\"\r\n    };\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('ProductName is Reuired'),\r\n        image:Yup.mixed().required('Product image is Required'),\r\n        price: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A price number can't start with a minus\").required('Price is Reuired'),\r\n        quantity: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A price  can't start with a minus\")\r\n            .integer(\"A price  can't include a decimal point\").required('Quantity is Reuired'),\r\n        selectOption: Yup.string().required('Select Category is Reuired'),\r\n        gst: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A GST number can't start with a minus\")\r\n            .integer(\"A GST number can't include a decimal point\").required('GST is Reuired'),\r\n        discount: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A discount number can't start with a minus\")\r\n            .integer(\"A discount number can't include a decimal point\").required('Discount is Reuired')\r\n    })\r\n    const onSubmit = async values => {\r\n        await editProductService(id, values)\r\n        history.push(\"/Product\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProduct();\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const loadProduct = async () => {\r\n        await getProductServiceById(id)\r\n            .then(res => setProduct(res.data))\r\n            .catch(err => {\r\n                history.push(\"/ProductNotFound\");\r\n            })\r\n    };\r\n    const loadCategories = async () => {\r\n        const result = await getCategoryService()\r\n        setCategory(result.data.reverse());\r\n\r\n    };\r\n\r\n    const { name, price, quantity, selectOption, gst, discount,image } = product;\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5 AddStyle\" >\r\n                <h2 className=\"text-center mb-4\">Edit A Product</h2>\r\n                <Formik initialValues={product || initialValues}\r\n                    onSubmit={onSubmit} loadProduct={loadProduct}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}>\r\n                    {\r\n                        formik => (\r\n                            <Form>\r\n                                <div >\r\n                                    <label>Product Name</label>\r\n                                    <Field name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder='Enter Product Name' />\r\n                                    <ErrorMessage name=\"name\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Price </label>\r\n                                    <Field name=\"price\" value={price} onChange={handleChange} type=\"text\" placeholder=' Price' />\r\n                                    <ErrorMessage name=\"price\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Quantity </label>\r\n                                    <Field name=\"quantity\" value={quantity} onChange={handleChange} type=\"text\" placeholder=' Quantity' />\r\n                                    <ErrorMessage name=\"quantity\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Category Name</label>\r\n                                    <Field as='select' name='selectOption' value={selectOption} onChange={handleChange}>\r\n                                        <option value=''>Select Category</option>\r\n                                        {categories.map(Category => {\r\n                                            return (\r\n                                                <option key={Category.name} value={Category.id}>{Category.name}</option>\r\n                                            )\r\n                                        })}\r\n                                    </Field>\r\n                                    <ErrorMessage name=\"selectOption\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>GST </label>\r\n                                    <Field name=\"gst\" value={gst} onChange={handleChange} type=\"text\" placeholder=' GST' />\r\n                                    <ErrorMessage name=\"gst\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Discount</label>\r\n                                    <Field name=\"discount\" value={discount} onChange={handleChange} type=\"text\" placeholder=' Discount' />\r\n                                    <ErrorMessage name=\"discount\" component={TextError} />\r\n                                </div>\r\n                                {/* <div >\r\n                                    <label>Image</label>\r\n                                    <Field name=\"image\" value={image} onChange={handleChange} type=\"file\" placeholder='image' />\r\n                                    <ErrorMessage name=\"image\" component={TextError} />\r\n                                </div> */}\r\n                                <button type='submit' disabled={!formik.isValid} className=\"btn btn-warning btn-block \">Edit Product</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProduct","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\Product.js",["102","103"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getProductServiceById } from \"../../../Services/ProductService\";\r\n\r\nconst Product = () => {\r\n    let history = useHistory();\r\n    const [product, setProduct] = useState({\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        selectOption: '',\r\n        gst: \"\",\r\n        discount: \"\"\r\n    });\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadProduct();\r\n    }, []);\r\n\r\n    const loadProduct = async () => {\r\n        await getProductServiceById(id)\r\n            .then(res => setProduct(res.data))\r\n            .catch(err => {\r\n                history.push(\"/ProductNotFound\");\r\n            })\r\n    };\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h1 className=\"display-4\">Product Id: {id}</h1>\r\n            <hr />\r\n            <ul className=\"list-group w-50\">\r\n                <li className=\"list-group-item\">ProductName: {product.name}</li>\r\n                <li className=\"list-group-item\">Price: {product.price}</li>\r\n                <li className=\"list-group-item\">Quantity: {product.quantity}</li>\r\n                <li className=\"list-group-item\">GST: {product.gst}</li>\r\n                <li className=\"list-group-item\">Discount: {product.discount}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\TextError.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductList.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductNotFound.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\Dashboard.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\CategoryList.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ShowProduct.js",["104","105"],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\CartProduct.js",["106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":31,"column":8,"nodeType":"113","endLine":31,"endColumn":10,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":38,"nodeType":"117","messageId":"118","endLine":1,"endColumn":49},{"ruleId":"111","severity":1,"message":"112","line":14,"column":8,"nodeType":"113","endLine":14,"endColumn":10,"suggestions":"119"},{"ruleId":"111","severity":1,"message":"120","line":63,"column":8,"nodeType":"113","endLine":63,"endColumn":10,"suggestions":"121"},{"ruleId":"115","severity":1,"message":"122","line":78,"column":64,"nodeType":"117","messageId":"118","endLine":78,"endColumn":69},{"ruleId":"115","severity":1,"message":"116","line":1,"column":38,"nodeType":"117","messageId":"118","endLine":1,"endColumn":49},{"ruleId":"111","severity":1,"message":"120","line":19,"column":8,"nodeType":"113","endLine":19,"endColumn":10,"suggestions":"123"},{"ruleId":"115","severity":1,"message":"124","line":2,"column":85,"nodeType":"117","messageId":"118","endLine":2,"endColumn":89},{"ruleId":"115","severity":1,"message":"125","line":2,"column":91,"nodeType":"117","messageId":"118","endLine":2,"endColumn":96},{"ruleId":"115","severity":1,"message":"124","line":2,"column":99,"nodeType":"117","messageId":"118","endLine":2,"endColumn":103},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.","ArrayExpression",["128"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar",["129"],"React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["130"],"'image' is assigned a value but never used.",["131"],"'Link' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"132","fix":"134"},{"desc":"135","fix":"136"},{"desc":"135","fix":"137"},"Update the dependencies array to be: [loadCategory]",{"range":"138","text":"139"},{"range":"140","text":"139"},"Update the dependencies array to be: [loadProduct]",{"range":"141","text":"142"},{"range":"143","text":"142"},[1006,1008],"[loadCategory]",[428,430],[2568,2570],"[loadProduct]",[533,535]]