[{"D:\\React\\ReactProject\\React-POS\\src\\index.js":"1","D:\\React\\ReactProject\\React-POS\\src\\App.js":"2","D:\\React\\ReactProject\\React-POS\\src\\reportWebVitals.js":"3","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\listItem.js":"4","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ListItem.js":"5","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\NotFound.js":"6","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\AddCategory.js":"7","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\EditCategory.js":"8","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\Category.js":"9","D:\\React\\ReactProject\\React-POS\\src\\Services\\CategoryService.js":"10","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\TextError.js":"11","D:\\React\\ReactProject\\React-POS\\src\\Services\\ProductService.js":"12","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\AddProduct.js":"13","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\EditProduct.js":"14","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\Product.js":"15","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\TextError.js":"16","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductList.js":"17","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductNotFound.js":"18","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\Dashboard.js":"19","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\CategoryList.js":"20","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ShowProduct.js":"21","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\CartProduct.js":"22","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\ProductAction.js":"23","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\productType.js":"24","D:\\React\\ReactProject\\React-POS\\src\\Redux\\store.js":"25","D:\\React\\ReactProject\\React-POS\\src\\Redux\\rootReducer.js":"26","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\productReducer.js":"27","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryReducer.js":"28","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryType.js":"29","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryAction.js":"30"},{"size":500,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":418,"mtime":1611937820926,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":1025,"mtime":1609940104518,"results":"35","hashOfConfig":"32"},{"size":1302,"mtime":1610447310012,"results":"36","hashOfConfig":"32"},{"size":8605,"mtime":1610099456983,"results":"37","hashOfConfig":"32"},{"size":2212,"mtime":1612012757551,"results":"38","hashOfConfig":"32"},{"size":2507,"mtime":1610348059948,"results":"39","hashOfConfig":"32"},{"size":1007,"mtime":1610043894795,"results":"40","hashOfConfig":"32"},{"size":550,"mtime":1611992704838,"results":"41","hashOfConfig":"32"},{"size":183,"mtime":1610040635457,"results":"42","hashOfConfig":"32"},{"size":536,"mtime":1611937098217,"results":"43","hashOfConfig":"32"},{"size":5666,"mtime":1612000659322,"results":"44","hashOfConfig":"32"},{"size":6523,"mtime":1612000646756,"results":"45","hashOfConfig":"32"},{"size":1426,"mtime":1610128492358,"results":"46","hashOfConfig":"32"},{"size":183,"mtime":1610044296085,"results":"47","hashOfConfig":"32"},{"size":6906,"mtime":1612001640295,"results":"48","hashOfConfig":"32"},{"size":8619,"mtime":1610102128853,"results":"49","hashOfConfig":"32"},{"size":6575,"mtime":1610796208875,"results":"50","hashOfConfig":"32"},{"size":6651,"mtime":1612000620859,"results":"51","hashOfConfig":"32"},{"size":7643,"mtime":1611412509207,"results":"52","hashOfConfig":"32"},{"size":7444,"mtime":1611409107420,"results":"53","hashOfConfig":"32"},{"size":535,"mtime":1611995295520,"results":"54","hashOfConfig":"32"},{"size":46,"mtime":1611935158096,"results":"55","hashOfConfig":"32"},{"size":300,"mtime":1611996495348,"results":"56","hashOfConfig":"32"},{"size":284,"mtime":1611995881015,"results":"57","hashOfConfig":"32"},{"size":340,"mtime":1611937299959,"results":"58","hashOfConfig":"32"},{"size":883,"mtime":1612012608766,"results":"59","hashOfConfig":"32"},{"size":202,"mtime":1612007218756,"results":"60","hashOfConfig":"32"},{"size":1248,"mtime":1612012138857,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"o255au",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\ReactProject\\React-POS\\src\\index.js",[],["130","131"],"D:\\React\\ReactProject\\React-POS\\src\\App.js",[],"D:\\React\\ReactProject\\React-POS\\src\\reportWebVitals.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\listItem.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ListItem.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\NotFound.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\AddCategory.js",["132"],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\EditCategory.js",["133"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Category.css';\r\nimport { editCategoryService, getCategoryServiceById } from \"../../../Services/CategoryService\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst EditCategory = () => {\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [category, setCategory] = useState({\r\n        name: \"\"\r\n    });\r\n    const handleChange = e => {\r\n        setCategory({ ...category, [e.target.name]: e.target.value })\r\n    };\r\n    const initialValues = {\r\n        name: \"\"\r\n    };\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('CategoryName is Reuired')\r\n    })\r\n    const onSubmit = async values => {\r\n        await editCategoryService(id, values)\r\n        history.push(\"/Category\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const loadCategory = async () => {\r\n        await getCategoryServiceById(id)\r\n            .then(res => setCategory(res.data))\r\n            .catch(err => {\r\n                history.push(\"/NotFound\");\r\n            })\r\n    };\r\n    const { name } = category;\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5 AddStyle\" >\r\n                <h2 className=\"text-center mb-4\">Edit A Category</h2>\r\n                <Formik initialValues={category || initialValues}\r\n                    onSubmit={onSubmit} loadCategory={loadCategory}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}>\r\n                    {\r\n                        formik => (\r\n                            <Form>\r\n                                <div >\r\n                                    <label>Category Name</label>\r\n                                    <Field name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder='Enter Category Name' />\r\n                                    <ErrorMessage name=\"name\" component={TextError} />\r\n                                </div>\r\n                                <button type='submit' disabled={!formik.isValid} className=\"btn btn-warning btn-block \">Edit Category</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCategory","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\Category.js",["134","135"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getCategoryServiceById } from \"../../../Services/CategoryService\";\r\n\r\nconst Category = () => {\r\n    let history = useHistory();\r\n    const [category, setCategory] = useState({\r\n        name: \"\"\r\n    });\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const loadCategory = async () => {\r\n        await getCategoryServiceById(id)\r\n            .then(res => setCategory(res.data))\r\n            .catch(err => {\r\n                history.push(\"/NotFound\");\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h1 className=\"display-4\">Category Id: {id}</h1>\r\n            <hr />\r\n            <ul className=\"list-group w-50\">\r\n                <li className=\"list-group-item\">CategoryName: {category.name}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Category;","D:\\React\\ReactProject\\React-POS\\src\\Services\\CategoryService.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\TextError.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Services\\ProductService.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\AddProduct.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\EditProduct.js",["136","137"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Product.css';\r\nimport { editProductService, getProductServiceById} from \"../../../Services/ProductService\";\r\nimport { getCategoryService } from \"../../../Services/CategoryService\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst EditProduct = () => {\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [categories, setCategory] = useState([]);\r\n    const [product, setProduct] = useState({\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        selectOption: '',\r\n        gst: \"\",\r\n        discount: \"\",\r\n        image:\"\"\r\n    });\r\n    const handleChange = e => {\r\n        setProduct({ ...product, [e.target.name]: e.target.value })\r\n    };\r\n//    const  handleFileUpload = (event) => {\r\n//         setProduct({image: event.currentTarget.files[0]})}\r\n//         }\r\n    \r\n    const initialValues = {\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        catName:'',\r\n        gst: \"\",\r\n        discount: \"\",\r\n        image:\"\"\r\n    };\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('ProductName is Reuired'),\r\n        image:Yup.mixed().required('Product image is Required'),\r\n        price: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A price number can't start with a minus\").required('Price is Reuired'),\r\n        quantity: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A price  can't start with a minus\")\r\n            .integer(\"A price  can't include a decimal point\").required('Quantity is Reuired'),\r\n        catName: Yup.string().required('Select Category is Reuired'),\r\n        gst: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A GST number can't start with a minus\")\r\n            .integer(\"A GST number can't include a decimal point\").required('GST is Reuired'),\r\n        discount: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A discount number can't start with a minus\")\r\n            .integer(\"A discount number can't include a decimal point\").required('Discount is Reuired')\r\n    })\r\n    const onSubmit = async values => {\r\n        await editProductService(id, values)\r\n        history.push(\"/Product\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProduct();\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const loadProduct = async () => {\r\n        await getProductServiceById(id)\r\n            .then(res => setProduct(res.data))\r\n            .catch(err => {\r\n                history.push(\"/ProductNotFound\");\r\n            })\r\n    };\r\n    const loadCategories = async () => {\r\n        const result = await getCategoryService()\r\n        setCategory(result.data.reverse());\r\n\r\n    };\r\n\r\n    const { name, price, quantity, gst, discount,image,catName } = product;\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5 AddStyle\" >\r\n                <h2 className=\"text-center mb-4\">Edit A Product</h2>\r\n                <Formik initialValues={product || initialValues}\r\n                    onSubmit={onSubmit} loadProduct={loadProduct}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}>\r\n                    {\r\n                        formik => (\r\n                            <Form>\r\n                                <div >\r\n                                    <label>Product Name</label>\r\n                                    <Field name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder='Enter Product Name' />\r\n                                    <ErrorMessage name=\"name\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Price </label>\r\n                                    <Field name=\"price\" value={price} onChange={handleChange} type=\"text\" placeholder=' Price' />\r\n                                    <ErrorMessage name=\"price\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Quantity </label>\r\n                                    <Field name=\"quantity\" value={quantity} onChange={handleChange} type=\"text\" placeholder=' Quantity' />\r\n                                    <ErrorMessage name=\"quantity\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Category Name</label>\r\n                                    <Field as='select' name='catName' value={catName} onChange={handleChange}>\r\n                                        <option value=''>Select Category</option>\r\n                                        {categories.map(Category => {\r\n                                            return (\r\n                                                <option key={Category.name} value={Category.name}>{Category.name}</option>\r\n                                            )\r\n                                        })}\r\n                                    </Field>\r\n                                    <ErrorMessage name=\"catName\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>GST </label>\r\n                                    <Field name=\"gst\" value={gst} onChange={handleChange} type=\"text\" placeholder=' GST' />\r\n                                    <ErrorMessage name=\"gst\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Discount</label>\r\n                                    <Field name=\"discount\" value={discount} onChange={handleChange} type=\"text\" placeholder=' Discount' />\r\n                                    <ErrorMessage name=\"discount\" component={TextError} />\r\n                                </div>\r\n                                <button type='submit' disabled={!formik.isValid} className=\"btn btn-warning btn-block \">Edit Product</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProduct","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\Product.js",["138","139"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getProductServiceById } from \"../../../Services/ProductService\";\r\n\r\nconst Product = () => {\r\n    let history = useHistory();\r\n    const [product, setProduct] = useState({\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        selectOption: '',\r\n        gst: \"\",\r\n        discount: \"\"\r\n    });\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadProduct();\r\n    }, []);\r\n\r\n    const loadProduct = async () => {\r\n        await getProductServiceById(id)\r\n            .then(res => setProduct(res.data))\r\n            .catch(err => {\r\n                history.push(\"/ProductNotFound\");\r\n            })\r\n    };\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h1 className=\"display-4\">Product Id: {id}</h1>\r\n            <hr />\r\n            <ul className=\"list-group w-50\">\r\n                <li className=\"list-group-item\">ProductName: {product.name}</li>\r\n                <li className=\"list-group-item\">Price: {product.price}</li>\r\n                <li className=\"list-group-item\">Quantity: {product.quantity}</li>\r\n                <li className=\"list-group-item\">GST: {product.gst}</li>\r\n                <li className=\"list-group-item\">Discount: {product.discount}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\TextError.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductList.js",["140","141","142","143"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProductService, deleteProductServiceById } from \"../../../Services/ProductService\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../../Products/ProductList/Product.css';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Dialog, Button, DialogActions, DialogContent, DialogContentText, DialogTitle, Paper } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { fetchProducts } from \"../../../Redux/Product/ProductAction\";\r\n\r\n\r\ntoast.configure()\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: 'auto',\r\n        marginTop: 50\r\n    },\r\n    paper: {\r\n        marginTop: 44,\r\n        width: '80%',\r\n        margin: 'auto',\r\n        boxShadow: theme.shadows[5],\r\n    },\r\n    head: {\r\n        backgroundColor: 'darkblue'\r\n    },\r\n    headcolor: {\r\n        color: 'white'\r\n    },\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}));\r\n\r\nfunction ProductList({ productData, fetchProducts }) {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]);\r\n    const [id, setId] = useState();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        //loadProducts();\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    // const loadProducts = async () => {\r\n    //     const result = await getProductService();\r\n    //     setProducts(result.data.reverse());\r\n    // };\r\n\r\n    const deleteProduct = async id => {\r\n        await deleteProductServiceById(id)\r\n        setOpen(false)\r\n        toast.success('Deleted successfully!')\r\n        history.push(\"/Product\");\r\n        //loadProducts();\r\n    }\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TableContainer className={classes.paper} component={Paper}>\r\n                <Link className=\"btn  btn-outline-primary AddBtn\" to=\"/products/add\">Add Product</Link>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead >\r\n                        <TableRow className={classes.head}>\r\n                            <TableCell className={classes.headcolor}>#</TableCell>\r\n                            <TableCell className={classes.headcolor}>Name</TableCell>\r\n                            <TableCell className={classes.headcolor}>Price(₹)</TableCell>\r\n                            <TableCell className={classes.headcolor}>Quantity</TableCell>\r\n                            <TableCell className={classes.headcolor}>Discount</TableCell>\r\n                            <TableCell className={classes.headcolor}>Cat_Name</TableCell>\r\n                            <TableCell className={classes.headcolor}>Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {productData && productData.products && productData.products\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((product, index) => (\r\n                                <TableRow key={product.id} className={classes.root}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell>{product.name}</TableCell>\r\n                                    <TableCell>{product.price}</TableCell>\r\n                                    <TableCell>{product.quantity}</TableCell>\r\n                                    <TableCell>{product.discount}</TableCell>\r\n                                    <TableCell>{product.catName}</TableCell>\r\n                                    <TableCell>\r\n                                        <Link className=\"btn fa fa-eye btn-primary mr-2\" to={`/products/${product.id}`}>View</Link>\r\n                                        <Link className=\"btn fa fa-edit btn-outline-primary mr-2\" to={`/products/edit/${product.id}`}> Edit</Link>\r\n                                        <button className=\"btn fa fa-trash btn-danger mr-2\" to=\"/Product\" onClick={() => { setId(product.id); handleClickOpen() }}> Delete</button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={productData.products.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Delete Product\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are You Sure to Delete?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                     </Button>\r\n                    <Button onClick={() => deleteProduct(id)} color=\"primary\" autoFocus>\r\n                        Ok\r\n                     </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productData: state.product\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchProducts: () => dispatch(fetchProducts())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList)","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductNotFound.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\Dashboard.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\CategoryList.js",["144","145","146","147","148"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiurl } from \"../../../Services/ProductService\";\r\nimport { getCategoryService, deleteCategoryServiceById } from \"../../../Services/CategoryService\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination } from \"@material-ui/core\";\r\nimport '../../Categories/CategoryList/Category.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Dialog, Button, DialogActions, DialogContent, DialogContentText, DialogTitle, Paper } from '@material-ui/core';\r\nimport axios from \"axios\";\r\nimport { connect } from 'react-redux'\r\nimport { fetchCategories } from \"../../../Redux/Category/categoryAction\";\r\n\r\ntoast.configure()\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: 'auto',\r\n        marginTop: 50\r\n    },\r\n    head: {\r\n        backgroundColor: 'darkblue'\r\n    },\r\n    headcolor: {\r\n        color: 'white'\r\n    },\r\n    paper: {\r\n        marginTop: 102,\r\n        width: '80%',\r\n        margin: 'auto',\r\n        boxShadow: theme.shadows[5],\r\n    },\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}));\r\n\r\nfunction CategoryList({ categoryData, fetchCategories }) {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [categories, setCategories] = useState([]);\r\n    const [id, setId] = useState();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // loadCategories();\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    // const loadCategories = async () => {\r\n    //     const result = await getCategoryService()\r\n    //     setCategories(result.data.reverse());\r\n\r\n    // };\r\n    const deleteCategory = async (id) => {\r\n        axios.get(`${apiurl}?catId=${id}`)\r\n            .then(result => {\r\n                result.data.map((res) => {\r\n                    axios.delete(`${apiurl}/${res.id}`)\r\n                }\r\n                )\r\n            })\r\n        await deleteCategoryServiceById(id)\r\n        setOpen(false)\r\n        toast.success('Deleted successfully!')\r\n        history.push(\"/Category\");\r\n        fetchCategories();\r\n        //loadCategories();\r\n    }\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TableContainer className={classes.paper} component={Paper} >\r\n                <Link className=\"btn btn-outline-primary AddCategory\" to=\"/categories/add\">Add Category</Link>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead >\r\n                        <TableRow className={classes.head}>\r\n                            <TableCell className={classes.headcolor}>#</TableCell>\r\n                            <TableCell className={classes.headcolor}>Name</TableCell>\r\n                            <TableCell className={classes.headcolor}>Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        { categoryData && categoryData.categories && categoryData.categories\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((category, index) => (\r\n                                <TableRow key={category.id} className={classes.root}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell >{category.name}</TableCell>\r\n                                    <TableCell>\r\n                                        <Link className=\"btn fa fa-eye btn-primary mr-3\" to={`/categories/${category.id}`}>View</Link>\r\n                                        <Link className=\"btn fa fa-edit btn-outline-primary mr-3\" to={`/categories/edit/${category.id}`}> Edit</Link>\r\n                                        <button className=\"btn fa fa-trash btn-danger mr-2\" to=\"/Category\" onClick={() => { setId(category.id); handleClickOpen() }}> Delete</button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={categoryData.categories.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Delete Product\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are You Sure to Delete???\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                     </Button>\r\n                    <Button onClick={() => deleteCategory(id)} color=\"primary\" autoFocus>\r\n                        Ok\r\n                     </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        categoryData: state.category\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchCategories: () => dispatch(fetchCategories())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList)","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ShowProduct.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\CartProduct.js",["149","150"],"import React, { useState, useEffect } from 'react'\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, Modal, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './ListItem.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        margin: 'auto',\r\n    },\r\n    paper: {\r\n        margin: 'auto',\r\n        width: '540px',\r\n        marginLeft: '-25px',\r\n        boxShadow: theme.shadows[5],\r\n    },\r\n    headcolor: {\r\n        fontWeight: 600\r\n    },\r\n    modalpaper: {\r\n        position: 'absolute',\r\n        width: '560px',\r\n        marginLeft: '456px',\r\n        marginTop: '100px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    }\r\n}))\r\n\r\nfunction CartProduct(props) {\r\n    const classes = useStyles();\r\n    const [cart, setCart] = useState([]);\r\n\r\n    const { cartitem, addToCart, removeFromCart } = props;\r\n\r\n    const itemsPrice = cartitem.reduce((a, c) => a + c.price * c.quantity + (c.price * c.quantity * c.gst / 100) - c.discount, 0);\r\n    const totalPrice = itemsPrice\r\n\r\n    useEffect(() => {\r\n        setCart({ cartitem })\r\n    }, [props]);\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const ModalPopUp = (\r\n        <TableContainer className={classes.modalpaper} component={Paper} >\r\n            <button\r\n                className=\"btn fa fa-times modalclose\"\r\n                onClick={handleClose}\r\n            >\r\n            </button>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead >\r\n                    <TableRow className={classes.head}>\r\n                        <TableCell className={classes.headcolor}>Sr No.</TableCell>\r\n                        <TableCell className={classes.headcolor}>Item</TableCell>\r\n                        <TableCell className={classes.headcolor}>Cost per Item(₹)</TableCell>\r\n                        <TableCell className={classes.headcolor}>Quantity</TableCell>\r\n                        <TableCell className={classes.headcolor}>GST(%)</TableCell>\r\n                        <TableCell className={classes.headcolor}>Total</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {cartitem\r\n                        .map((cart, index) => (\r\n                            <TableRow key={cart.id} className={classes.root}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {index + 1}\r\n                                </TableCell>\r\n                                <TableCell>{cart.name}</TableCell>\r\n                                <TableCell>{cart.price}</TableCell>\r\n                                <TableCell>{cart.quantity}</TableCell>\r\n                                <TableCell>{cart.gst}</TableCell>\r\n                                <TableCell>{totalPrice.toFixed(2)}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                </TableBody>\r\n            </Table>\r\n            <h2 id=\"simple-modal-title\">Thank you for shopping with us!!</h2>\r\n        </TableContainer >\r\n    );\r\n    return (\r\n        <>\r\n            <div>{cartitem.length === 0 && <strong>Cart is empty</strong>}</div>\r\n            <TableContainer className={classes.paper} component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead >\r\n                        <TableRow className={classes.head}>\r\n                            <TableCell className={classes.headcolor}>Sr No.</TableCell>\r\n                            <TableCell className={classes.headcolor}>Item</TableCell>\r\n                            <TableCell className={classes.headcolor}>Cost per Item(₹)</TableCell>\r\n                            <TableCell className={classes.headcolor}>Quantity</TableCell>\r\n                            <TableCell className={classes.headcolor}>GST(%)</TableCell>\r\n                            <TableCell className={classes.headcolor}>Action</TableCell>\r\n                            <TableCell className={classes.headcolor}>Total</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {cartitem\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((cart, index) => (\r\n                                <TableRow key={cart.id} className={classes.root}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell>{cart.name}</TableCell>\r\n                                    <TableCell>{cart.price}</TableCell>\r\n                                    <TableCell>{cart.quantity}</TableCell>\r\n                                    <TableCell>{cart.gst}</TableCell>\r\n                                    <TableCell>\r\n                                        <button  onClick={() => addToCart(cart)} className=\"btn fa fa-plus  mr-2\" ></button>\r\n                                        <button onClick={() => removeFromCart(cart)} className=\"btn fa fa-minus  mr-2\" > </button>\r\n                                    </TableCell>\r\n                                    <TableCell>{cart.price * cart.quantity + (cart.price * cart.quantity * cart.gst / 100) - cart.discount}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[3, 8, 10, 15]}\r\n                    component=\"div\"\r\n                    count={cartitem.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer >\r\n\r\n            {cartitem.length !== 0 && (\r\n                <>\r\n                    <br></br>\r\n                    <div className=\"row\">\r\n                        <div className=\"text-right\">\r\n                            <strong>Total Price:₹{totalPrice.toFixed(2)}</strong>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <button className='btn btn-primary invoice' onClick={handleOpen}>\r\n                Invoice\r\n         </button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {ModalPopUp}\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartProduct","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\ProductAction.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\productType.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\store.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\rootReducer.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\productReducer.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryReducer.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryType.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryAction.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":28},{"ruleId":"159","severity":1,"message":"160","line":31,"column":8,"nodeType":"161","endLine":31,"endColumn":10,"suggestions":"162"},{"ruleId":"155","severity":1,"message":"163","line":1,"column":38,"nodeType":"157","messageId":"158","endLine":1,"endColumn":49},{"ruleId":"159","severity":1,"message":"160","line":14,"column":8,"nodeType":"161","endLine":14,"endColumn":10,"suggestions":"164"},{"ruleId":"159","severity":1,"message":"165","line":63,"column":8,"nodeType":"161","endLine":63,"endColumn":10,"suggestions":"166"},{"ruleId":"155","severity":1,"message":"167","line":78,"column":50,"nodeType":"157","messageId":"158","endLine":78,"endColumn":55},{"ruleId":"155","severity":1,"message":"163","line":1,"column":38,"nodeType":"157","messageId":"158","endLine":1,"endColumn":49},{"ruleId":"159","severity":1,"message":"165","line":19,"column":8,"nodeType":"161","endLine":19,"endColumn":10,"suggestions":"168"},{"ruleId":"155","severity":1,"message":"169","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":27},{"ruleId":"155","severity":1,"message":"170","line":45,"column":12,"nodeType":"157","messageId":"158","endLine":45,"endColumn":20},{"ruleId":"155","severity":1,"message":"171","line":45,"column":22,"nodeType":"157","messageId":"158","endLine":45,"endColumn":33},{"ruleId":"159","severity":1,"message":"172","line":59,"column":8,"nodeType":"161","endLine":59,"endColumn":10,"suggestions":"173"},{"ruleId":"155","severity":1,"message":"174","line":4,"column":10,"nodeType":"157","messageId":"158","endLine":4,"endColumn":28},{"ruleId":"155","severity":1,"message":"175","line":46,"column":12,"nodeType":"157","messageId":"158","endLine":46,"endColumn":22},{"ruleId":"155","severity":1,"message":"176","line":46,"column":24,"nodeType":"157","messageId":"158","endLine":46,"endColumn":37},{"ruleId":"159","severity":1,"message":"177","line":61,"column":8,"nodeType":"161","endLine":61,"endColumn":10,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":71,"column":39,"nodeType":"181","messageId":"182","endLine":71,"endColumn":41},{"ruleId":"155","severity":1,"message":"183","line":32,"column":12,"nodeType":"157","messageId":"158","endLine":32,"endColumn":16},{"ruleId":"159","severity":1,"message":"184","line":41,"column":8,"nodeType":"161","endLine":41,"endColumn":15,"suggestions":"185"},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'addCategoryService' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.","ArrayExpression",["188"],"'useCallback' is defined but never used.",["189"],"React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["190"],"'image' is assigned a value but never used.",["191"],"'getProductService' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array. If 'fetchProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["192"],"'getCategoryService' is defined but never used.","'categories' is assigned a value but never used.","'setCategories' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchCategories'. Either include it or remove the dependency array. If 'fetchCategories' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["193"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'cart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cartitem'. Either include it or remove the dependency array.",["194"],"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"195","fix":"197"},{"desc":"198","fix":"199"},{"desc":"198","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [loadCategory]",{"range":"207","text":"208"},{"range":"209","text":"208"},"Update the dependencies array to be: [loadProduct]",{"range":"210","text":"211"},{"range":"212","text":"211"},"Update the dependencies array to be: [fetchProducts]",{"range":"213","text":"214"},"Update the dependencies array to be: [fetchCategories]",{"range":"215","text":"216"},"Update the dependencies array to be: [cartitem, props]",{"range":"217","text":"218"},[1006,1008],"[loadCategory]",[428,430],[2557,2559],"[loadProduct]",[533,535],[1804,1806],"[fetchProducts]",[1917,1919],"[fetchCategories]",[1240,1247],"[cartitem, props]"]