[{"D:\\React\\ReactProject\\React-POS\\src\\index.js":"1","D:\\React\\ReactProject\\React-POS\\src\\App.js":"2","D:\\React\\ReactProject\\React-POS\\src\\reportWebVitals.js":"3","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\listItem.js":"4","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ListItem.js":"5","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\NotFound.js":"6","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\AddCategory.js":"7","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\EditCategory.js":"8","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\Category.js":"9","D:\\React\\ReactProject\\React-POS\\src\\Services\\CategoryService.js":"10","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\TextError.js":"11","D:\\React\\ReactProject\\React-POS\\src\\Services\\ProductService.js":"12","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\AddProduct.js":"13","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\EditProduct.js":"14","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\Product.js":"15","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\TextError.js":"16","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductList.js":"17","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductNotFound.js":"18","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\Dashboard.js":"19","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\CategoryList.js":"20","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ShowProduct.js":"21","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\CartProduct.js":"22","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\ProductAction.js":"23","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\productType.js":"24","D:\\React\\ReactProject\\React-POS\\src\\Redux\\store.js":"25","D:\\React\\ReactProject\\React-POS\\src\\Redux\\rootReducer.js":"26","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\productReducer.js":"27","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryReducer.js":"28","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryType.js":"29","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryAction.js":"30","D:\\React\\ReactProject\\React-POS\\src\\Redux\\Cart\\cartReducer.js":"31"},{"size":500,"mtime":499162500000,"results":"32","hashOfConfig":"33"},{"size":418,"mtime":1611937820926,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":1025,"mtime":1609940104518,"results":"36","hashOfConfig":"33"},{"size":1302,"mtime":1610447310012,"results":"37","hashOfConfig":"33"},{"size":8605,"mtime":1610099456983,"results":"38","hashOfConfig":"33"},{"size":2212,"mtime":1612013787359,"results":"39","hashOfConfig":"33"},{"size":3002,"mtime":1612167100229,"results":"40","hashOfConfig":"33"},{"size":1008,"mtime":1612167161850,"results":"41","hashOfConfig":"33"},{"size":550,"mtime":1611992704838,"results":"42","hashOfConfig":"33"},{"size":183,"mtime":1610040635457,"results":"43","hashOfConfig":"33"},{"size":536,"mtime":1612015191511,"results":"44","hashOfConfig":"33"},{"size":6092,"mtime":1612017170045,"results":"45","hashOfConfig":"33"},{"size":6706,"mtime":1612167282372,"results":"46","hashOfConfig":"33"},{"size":1426,"mtime":1610128492358,"results":"47","hashOfConfig":"33"},{"size":183,"mtime":1610044296085,"results":"48","hashOfConfig":"33"},{"size":7026,"mtime":1612016993060,"results":"49","hashOfConfig":"33"},{"size":8619,"mtime":1610102128853,"results":"50","hashOfConfig":"33"},{"size":6575,"mtime":1610796208875,"results":"51","hashOfConfig":"33"},{"size":6778,"mtime":1612016269859,"results":"52","hashOfConfig":"33"},{"size":8352,"mtime":1613048035546,"results":"53","hashOfConfig":"33"},{"size":7442,"mtime":1613047263177,"results":"54","hashOfConfig":"33"},{"size":2190,"mtime":1613048856001,"results":"55","hashOfConfig":"33"},{"size":232,"mtime":1613048813091,"results":"56","hashOfConfig":"33"},{"size":300,"mtime":1611996495348,"results":"57","hashOfConfig":"33"},{"size":353,"mtime":1613049035152,"results":"58","hashOfConfig":"33"},{"size":999,"mtime":1613048901516,"results":"59","hashOfConfig":"33"},{"size":1015,"mtime":1612166018298,"results":"60","hashOfConfig":"33"},{"size":252,"mtime":1612019585819,"results":"61","hashOfConfig":"33"},{"size":2219,"mtime":1612019646517,"results":"62","hashOfConfig":"33"},{"size":1403,"mtime":1613049015417,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"o255au",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":2,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React\\ReactProject\\React-POS\\src\\index.js",[],["135","136"],"D:\\React\\ReactProject\\React-POS\\src\\App.js",[],"D:\\React\\ReactProject\\React-POS\\src\\reportWebVitals.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\listItem.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ListItem.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\NotFound.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\AddCategory.js",["137"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Category.css';\r\nimport { addCategoryService } from \"../../../Services/CategoryService\";\r\nimport TextError from \"./TextError\";\r\nimport { addCategories } from \"../../../Redux/Category/categoryAction\";\r\nimport { connect } from 'react-redux'\r\n\r\nconst AddCategory = ({addCategories}) => {\r\n    let history = useHistory();\r\n    const initialValues = {\r\n        name: \"\"\r\n    };\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('CategoryName is Reuired')\r\n    })\r\n    const onSubmit = values => {\r\n        addCategories(values);\r\n        // await addCategoryService(values)\r\n         history.push(\"/Category\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5 AddStyle\" >\r\n                <h2 className=\"text-center mb-4\">Add A Category</h2>\r\n                <Formik initialValues={initialValues}\r\n                    onSubmit={onSubmit}\r\n                    validationSchema={validationSchema}>\r\n                    {\r\n                        formik => (\r\n                            <Form>\r\n                                <div >\r\n                                    <label>Category Name</label>\r\n                                    <Field name=\"name\" type=\"text\" placeholder='Enter Category Name' />\r\n                                    <ErrorMessage name=\"name\" component={TextError} />\r\n                                </div>     \r\n                                <button type='submit' disabled={!formik.isValid} className=\"btn btn-success btn-block\">Add Category</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        categoryData: state.category\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addCategories: (values) => dispatch(addCategories(values))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCategory)\r\n","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\EditCategory.js",["138","139"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Category.css';\r\nimport { editCategoryService, getCategoryServiceById } from \"../../../Services/CategoryService\";\r\nimport TextError from \"./TextError\";\r\nimport {connect} from 'react-redux'\r\nimport { editCategories } from \"../../../Redux/Category/categoryAction\";\r\n\r\nconst EditCategory = ({editCategories,loadCategories}) => {\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [category, setCategory] = useState({\r\n        name: \"\"\r\n    });\r\n    const handleChange = e => {\r\n        setCategory({ ...category, [e.target.name]: e.target.value })\r\n    };\r\n    const initialValues = {\r\n        name: \"\"\r\n    };\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('CategoryName is Reuired')\r\n    })\r\n    const onSubmit =  (values) => {\r\n        // await editCategoryService(id, values)\r\n        editCategories(id,values);\r\n        history.push(\"/Category\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const loadCategory = async () => {\r\n        //loadCategories(id);\r\n        await getCategoryServiceById(id)\r\n            .then(res => setCategory(res.data))\r\n            .catch(err => {\r\n                history.push(\"/NotFound\");\r\n            })\r\n    };\r\n    const { name } = category;\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5 AddStyle\" >\r\n                <h2 className=\"text-center mb-4\">Edit A Category</h2>\r\n                <Formik initialValues={category || initialValues}\r\n                    onSubmit={onSubmit} loadCategory={loadCategory}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}>\r\n                    {\r\n                        formik => (\r\n                            <Form>\r\n                                <div >\r\n                                    <label>Category Name</label>\r\n                                    <Field name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder='Enter Category Name' />\r\n                                    <ErrorMessage name=\"name\" component={TextError} />\r\n                                </div>\r\n                                <button type='submit' disabled={!formik.isValid} className=\"btn btn-warning btn-block \">Edit Category</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        categoryData: state.category\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        editCategories: (id,values) => dispatch(editCategories(id,values))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCategory)\r\n","D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\Category.js",["140","141"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getCategoryServiceById } from \"../../../Services/CategoryService\";\r\n\r\nconst Category = () => {\r\n    let history = useHistory();\r\n    const [category, setCategory] = useState({\r\n        name: \"\"\r\n    });\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const loadCategory = async () => {\r\n        await getCategoryServiceById(id)\r\n            .then(res => setCategory(res.data))\r\n            .catch(err => {\r\n                history.push(\"/NotFound\");\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h1 className=\"display-4\">Category Id: {id}</h1>\r\n            <hr />\r\n            <ul className=\"list-group w-50\">\r\n                <li className=\"list-group-item\">CategoryName: {category.name}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Category\r\n","D:\\React\\ReactProject\\React-POS\\src\\Services\\CategoryService.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\CategoryList\\TextError.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Services\\ProductService.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\AddProduct.js",["142"],"import React,{useEffect,useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Product.css';\r\nimport { addProductService } from \"../../../Services/ProductService\";\r\nimport TextError from \"./TextError\";\r\nimport { getCategoryService } from \"../../../Services/CategoryService\";\r\nimport { addProducts } from \"../../../Redux/Product/ProductAction\";\r\nimport {connect} from 'react-redux'\r\n\r\nconst AddProduct = ({addProducts}) => {\r\n    let history = useHistory();\r\n    const initialValues = {\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        catName:'',\r\n        gst: \"\",\r\n        discount: \"\",\r\n        image:\"\"\r\n    };\r\n    const [categories, setCategory] = useState([]);\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('ProductName is Reuired'),\r\n        image:Yup.mixed().required('Product image is Required'),\r\n        price: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A price number can't start with a minus\").required('Price is Reuired'),\r\n        quantity: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A price  can't start with a minus\")\r\n            .integer(\"A price  can't include a decimal point\").required('Quantity is Reuired'),\r\n        catName: Yup.string().required('Select Category is Reuired'),\r\n        gst: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A GST number can't start with a minus\")\r\n            .integer(\"A GST number can't include a decimal point\").required('GST is Reuired'),\r\n        discount: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A discount number can't start with a minus\")\r\n            .integer(\"A discount number can't include a decimal point\").required('Discount is Reuired')\r\n    })\r\n    const onSubmit = async (values) => {\r\n        addProducts(values);\r\n        //await addProductService(values)\r\n        history.push(\"/Product\");\r\n    }\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const loadCategories = async () => {\r\n        const result = await getCategoryService()\r\n        setCategory(result.data.reverse());\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5 AddStyle\" >\r\n                <h2 className=\"text-center mb-4\">Add A Product</h2>\r\n                <Formik initialValues={initialValues}\r\n                    onSubmit={onSubmit}\r\n                    validationSchema={validationSchema}>\r\n                    {\r\n                        formik => (\r\n                            <Form>\r\n                                <div >\r\n                                    <label>Product Name</label>\r\n                                    <Field name=\"name\" type=\"text\" placeholder='Enter Product Name' />\r\n                                    <ErrorMessage name=\"name\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Price </label>\r\n                                    <Field name=\"price\" type=\"text\" placeholder=' Price' />\r\n                                    <ErrorMessage name=\"price\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Quantity </label>\r\n                                    <Field name=\"quantity\" type=\"text\" placeholder=' Quantity' />\r\n                                    <ErrorMessage name=\"quantity\" component={TextError} />\r\n\r\n                                </div>\r\n                                <div >\r\n                                    <label>Category Name</label>\r\n                                    <Field as='select' name='catName'>\r\n                                        <option value=''>Select Category</option>\r\n                                        {categories.map(Category => {\r\n                                            return (\r\n                                            <option key={Category.name} value={Category.name}>{Category.name}</option>\r\n                                            )\r\n                                        })}\r\n                                    </Field>\r\n                                    <ErrorMessage name=\"catName\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>GST </label>\r\n                                    <Field name=\"gst\" type=\"text\" placeholder=' GST' />\r\n                                    <ErrorMessage name=\"gst\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Discount</label>\r\n                                    <Field name=\"discount\" type=\"text\" placeholder=' Discount' />\r\n                                    <ErrorMessage name=\"discount\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Image</label>\r\n                                    <Field name=\"image\" type=\"file\" placeholder='image' />\r\n                                    <ErrorMessage name=\"image\" component={TextError} />\r\n                                </div>\r\n                                <button type='submit' disabled={!formik.isValid} className=\"btn btn-success btn-block\">Add Product</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productData: state.product\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addProducts: (values) => dispatch(addProducts(values))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProduct)\r\n","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\EditProduct.js",["143","144","145","146"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Product.css';\r\nimport { editProductService, getProductServiceById} from \"../../../Services/ProductService\";\r\nimport TextError from \"./TextError\";\r\nimport { editProducts } from \"../../../Redux/Product/ProductAction\";\r\nimport {connect} from 'react-redux'\r\n\r\nconst EditProduct = ({editProducts}) => {\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [categories, setCategory] = useState([]);\r\n    const [product, setProduct] = useState({\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        catName: '',\r\n        gst: \"\",\r\n        discount: \"\",\r\n        image:\"\"\r\n    });\r\n    const handleChange = e => {\r\n        setProduct({ ...product, [e.target.name]: e.target.value })\r\n    };\r\n//    const  handleFileUpload = (event) => {\r\n//         setProduct({image: event.currentTarget.files[0]})}\r\n//         }\r\n    \r\n    const initialValues = {\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        catName:'',\r\n        gst: \"\",\r\n        discount: \"\",\r\n        image:\"\"\r\n    };\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('ProductName is Reuired'),\r\n        image:Yup.mixed().required('Product image is Required'),\r\n        price: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A price number can't start with a minus\").required('Price is Reuired'),\r\n        quantity: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A price  can't start with a minus\")\r\n            .integer(\"A price  can't include a decimal point\").required('Quantity is Reuired'),\r\n        catName: Yup.string().required('Select Category is Reuired'),\r\n        gst: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A GST number can't start with a minus\")\r\n            .integer(\"A GST number can't include a decimal point\").required('GST is Reuired'),\r\n        discount: Yup.number().typeError(\"That doesn't look like a  number\")\r\n            .positive(\"A discount number can't start with a minus\")\r\n            .integer(\"A discount number can't include a decimal point\").required('Discount is Reuired')\r\n    })\r\n    const onSubmit = async values => {\r\n        editProducts(id,values);\r\n        //await editProductService(id, values)\r\n        history.push(\"/Product\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProduct();\r\n    }, []);\r\n\r\n    const loadProduct = async () => {\r\n        await getProductServiceById(id)\r\n            .then(res => setProduct(res.data))\r\n            .catch(err => {\r\n                history.push(\"/ProductNotFound\");\r\n            })\r\n    };\r\n    \r\n    const { name, price, quantity, gst, discount,image,catName } = product;\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"w-75 mx-auto shadow p-5 AddStyle\" >\r\n                <h2 className=\"text-center mb-4\">Edit A Product</h2>\r\n                <Formik initialValues={product || initialValues}\r\n                    onSubmit={onSubmit} loadProduct={loadProduct}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}>\r\n                    {\r\n                        formik => (\r\n                            <Form>\r\n                                <div >\r\n                                    <label>Product Name</label>\r\n                                    <Field name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder='Enter Product Name' />\r\n                                    <ErrorMessage name=\"name\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Price </label>\r\n                                    <Field name=\"price\" value={price} onChange={handleChange} type=\"text\" placeholder=' Price' />\r\n                                    <ErrorMessage name=\"price\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Quantity </label>\r\n                                    <Field name=\"quantity\" value={quantity} onChange={handleChange} type=\"text\" placeholder=' Quantity' />\r\n                                    <ErrorMessage name=\"quantity\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Category Name</label>\r\n                                    <Field as='select' name='catName' value={catName} onChange={handleChange}>\r\n                                        <option value=''>Select Category</option>\r\n                                        {categories.map(Category => {\r\n                                            return (\r\n                                                <option key={Category.name} value={Category.name}>{Category.name}</option>\r\n                                            )\r\n                                        })}\r\n                                    </Field>\r\n                                    <ErrorMessage name=\"catName\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>GST </label>\r\n                                    <Field name=\"gst\" value={gst} onChange={handleChange} type=\"text\" placeholder=' GST' />\r\n                                    <ErrorMessage name=\"gst\" component={TextError} />\r\n                                </div>\r\n                                <div >\r\n                                    <label>Discount</label>\r\n                                    <Field name=\"discount\" value={discount} onChange={handleChange} type=\"text\" placeholder=' Discount' />\r\n                                    <ErrorMessage name=\"discount\" component={TextError} />\r\n                                </div>\r\n                                <button type='submit' disabled={!formik.isValid} className=\"btn btn-warning btn-block \">Edit Product</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productData: state.product\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        editProducts:(id,values)=>dispatch(editProducts(id,values))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProduct)","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\Product.js",["147","148"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getProductServiceById } from \"../../../Services/ProductService\";\r\n\r\nconst Product = () => {\r\n    let history = useHistory();\r\n    const [product, setProduct] = useState({\r\n        name: \"\",\r\n        price: \"\",\r\n        quantity: \"\",\r\n        selectOption: '',\r\n        gst: \"\",\r\n        discount: \"\"\r\n    });\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        loadProduct();\r\n    }, []);\r\n\r\n    const loadProduct = async () => {\r\n        await getProductServiceById(id)\r\n            .then(res => setProduct(res.data))\r\n            .catch(err => {\r\n                history.push(\"/ProductNotFound\");\r\n            })\r\n    };\r\n    return (\r\n        <div className=\"container py-4\">\r\n            <h1 className=\"display-4\">Product Id: {id}</h1>\r\n            <hr />\r\n            <ul className=\"list-group w-50\">\r\n                <li className=\"list-group-item\">ProductName: {product.name}</li>\r\n                <li className=\"list-group-item\">Price: {product.price}</li>\r\n                <li className=\"list-group-item\">Quantity: {product.quantity}</li>\r\n                <li className=\"list-group-item\">GST: {product.gst}</li>\r\n                <li className=\"list-group-item\">Discount: {product.discount}</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\ProductList\\TextError.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductList.js",["149","150","151","152","153"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProductService, deleteProductServiceById } from \"../../../Services/ProductService\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../../Products/ProductList/Product.css';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Dialog, Button, DialogActions, DialogContent, DialogContentText, DialogTitle, Paper } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { fetchProducts, deleteProducts } from \"../../../Redux/Product/ProductAction\";\r\n\r\n\r\ntoast.configure()\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: 'auto',\r\n        marginTop: 50\r\n    },\r\n    paper: {\r\n        marginTop: 44,\r\n        width: '80%',\r\n        margin: 'auto',\r\n        boxShadow: theme.shadows[5],\r\n    },\r\n    head: {\r\n        backgroundColor: 'darkblue'\r\n    },\r\n    headcolor: {\r\n        color: 'white'\r\n    },\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}));\r\n\r\nfunction ProductList({ productData, fetchProducts,deleteProducts }) {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]);\r\n    const [id, setId] = useState();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        //loadProducts();\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    // const loadProducts = async () => {\r\n    //     const result = await getProductService();\r\n    //     setProducts(result.data.reverse());\r\n    // };\r\n\r\n    const deleteProduct = async () => {\r\n        deleteProducts(id);\r\n        //await deleteProductServiceById(id)\r\n        setOpen(false)\r\n        toast.success('Deleted successfully!')\r\n        history.push(\"/Product\");\r\n        //loadProducts();\r\n    }\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TableContainer className={classes.paper} component={Paper}>\r\n                <Link className=\"btn  btn-outline-primary AddBtn\" to=\"/products/add\">Add Product</Link>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead >\r\n                        <TableRow className={classes.head}>\r\n                            <TableCell className={classes.headcolor}>#</TableCell>\r\n                            <TableCell className={classes.headcolor}>Name</TableCell>\r\n                            <TableCell className={classes.headcolor}>Price(₹)</TableCell>\r\n                            <TableCell className={classes.headcolor}>Quantity</TableCell>\r\n                            <TableCell className={classes.headcolor}>Discount</TableCell>\r\n                            <TableCell className={classes.headcolor}>Cat_Name</TableCell>\r\n                            <TableCell className={classes.headcolor}>Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {productData && productData.products && productData.products\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((product, index) => (\r\n                                <TableRow key={product.id} className={classes.root}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell>{product.name}</TableCell>\r\n                                    <TableCell>{product.price}</TableCell>\r\n                                    <TableCell>{product.quantity}</TableCell>\r\n                                    <TableCell>{product.discount}</TableCell>\r\n                                    <TableCell>{product.catName}</TableCell>\r\n                                    <TableCell>\r\n                                        <Link className=\"btn fa fa-eye btn-primary mr-2\" to={`/products/${product.id}`}>View</Link>\r\n                                        <Link className=\"btn fa fa-edit btn-outline-primary mr-2\" to={`/products/edit/${product.id}`}> Edit</Link>\r\n                                        <button className=\"btn fa fa-trash btn-danger mr-2\" to=\"/Product\" onClick={() => { setId(product.id); handleClickOpen() }}> Delete</button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={productData.products.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Delete Product\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are You Sure to Delete?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                     </Button>\r\n                    <Button onClick={() => deleteProduct()} color=\"primary\" autoFocus>\r\n                        Ok\r\n                     </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productData: state.product\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchProducts: () => dispatch(fetchProducts()),\r\n        deleteProducts:(id)=>dispatch(deleteProducts(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList)","D:\\React\\ReactProject\\React-POS\\src\\components\\Products\\Pages\\ProductNotFound.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\Dashboard.js",[],"D:\\React\\ReactProject\\React-POS\\src\\components\\Categories\\Pages\\CategoryList.js",["154","155","156","157","158","159","160"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { apiurl } from \"../../../Services/ProductService\";\r\nimport { getCategoryService, deleteCategoryServiceById } from \"../../../Services/CategoryService\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination } from \"@material-ui/core\";\r\nimport '../../Categories/CategoryList/Category.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Dialog, Button, DialogActions, DialogContent, DialogContentText, DialogTitle, Paper } from '@material-ui/core';\r\nimport axios from \"axios\";\r\nimport { connect } from 'react-redux'\r\nimport { fetchCategories, deleteCategories } from \"../../../Redux/Category/categoryAction\";\r\n\r\ntoast.configure()\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        width: '90%',\r\n        margin: 'auto',\r\n        marginTop: 50\r\n    },\r\n    head: {\r\n        backgroundColor: 'darkblue'\r\n    },\r\n    headcolor: {\r\n        color: 'white'\r\n    },\r\n    paper: {\r\n        marginTop: 102,\r\n        width: '80%',\r\n        margin: 'auto',\r\n        boxShadow: theme.shadows[5],\r\n    },\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}));\r\n\r\nfunction CategoryList({ categoryData, fetchCategories,deleteCategories }) {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [categories, setCategories] = useState([]);\r\n    const [id, setId] = useState();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // loadCategories();\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    // const loadCategories = async () => {\r\n    //     const result = await getCategoryService()\r\n    //     setCategories(result.data.reverse());\r\n\r\n    // };\r\n    const deleteCategory = async () => {\r\n        // axios.get(`${apiurl}?catId=${id}`)\r\n        //     .then(result => {\r\n        //         result.data.map((res) => {\r\n        //             axios.delete(`${apiurl}/${res.id}`)\r\n        //         }\r\n        //         )\r\n        //     })\r\n          deleteCategories(id)  \r\n        //await deleteCategoryServiceById(id)\r\n        setOpen(false)\r\n        toast.success('Deleted successfully!')\r\n        history.push(\"/Category\");\r\n        //loadCategories();\r\n    }\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TableContainer className={classes.paper} component={Paper} >\r\n                <Link className=\"btn btn-outline-primary AddCategory\" to=\"/categories/add\">Add Category</Link>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead >\r\n                        <TableRow className={classes.head}>\r\n                            <TableCell className={classes.headcolor}>#</TableCell>\r\n                            <TableCell className={classes.headcolor}>Name</TableCell>\r\n                            <TableCell className={classes.headcolor}>Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        { categoryData && categoryData.categories && categoryData.categories\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((category, index) => (\r\n                                <TableRow key={category.id} className={classes.root}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell >{category.name}</TableCell>\r\n                                    <TableCell>\r\n                                        <Link className=\"btn fa fa-eye btn-primary mr-3\" to={`/categories/${category.id}`}>View</Link>\r\n                                        <Link className=\"btn fa fa-edit btn-outline-primary mr-3\" to={`/categories/edit/${category.id}`}> Edit</Link>\r\n                                        <button className=\"btn fa fa-trash btn-danger mr-2\" to=\"/Category\" onClick={() => { setId(category.id); handleClickOpen() }}> Delete</button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={categoryData.categories.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Delete Product\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are You Sure to Delete???\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                     </Button>\r\n                    <Button onClick={() => deleteCategory()} color=\"primary\" autoFocus>\r\n                        Ok\r\n                     </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        categoryData: state.category\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchCategories: () => dispatch(fetchCategories()),\r\n        deleteCategories: (id) => dispatch(deleteCategories(id))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList)","D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\ShowProduct.js",["161","162","163"],"D:\\React\\ReactProject\\React-POS\\src\\components\\Layout\\CartProduct.js",["164","165"],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\ProductAction.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\productType.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\store.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\rootReducer.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Product\\productReducer.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryReducer.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryType.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Category\\categoryAction.js",[],"D:\\React\\ReactProject\\React-POS\\src\\Redux\\Cart\\cartReducer.js",["166","167","168","169","170","171","172","173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":6,"column":10,"nodeType":"180","messageId":"181","endLine":6,"endColumn":28},{"ruleId":"178","severity":1,"message":"182","line":6,"column":10,"nodeType":"180","messageId":"181","endLine":6,"endColumn":29},{"ruleId":"183","severity":1,"message":"184","line":34,"column":8,"nodeType":"185","endLine":34,"endColumn":10,"suggestions":"186"},{"ruleId":"178","severity":1,"message":"187","line":1,"column":38,"nodeType":"180","messageId":"181","endLine":1,"endColumn":49},{"ruleId":"183","severity":1,"message":"184","line":14,"column":8,"nodeType":"185","endLine":14,"endColumn":10,"suggestions":"188"},{"ruleId":"178","severity":1,"message":"189","line":6,"column":10,"nodeType":"180","messageId":"181","endLine":6,"endColumn":27},{"ruleId":"178","severity":1,"message":"190","line":6,"column":10,"nodeType":"180","messageId":"181","endLine":6,"endColumn":28},{"ruleId":"178","severity":1,"message":"191","line":14,"column":24,"nodeType":"180","messageId":"181","endLine":14,"endColumn":35},{"ruleId":"183","severity":1,"message":"192","line":64,"column":8,"nodeType":"185","endLine":64,"endColumn":10,"suggestions":"193"},{"ruleId":"178","severity":1,"message":"194","line":74,"column":50,"nodeType":"180","messageId":"181","endLine":74,"endColumn":55},{"ruleId":"178","severity":1,"message":"187","line":1,"column":38,"nodeType":"180","messageId":"181","endLine":1,"endColumn":49},{"ruleId":"183","severity":1,"message":"192","line":19,"column":8,"nodeType":"185","endLine":19,"endColumn":10,"suggestions":"195"},{"ruleId":"178","severity":1,"message":"196","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":27},{"ruleId":"178","severity":1,"message":"197","line":3,"column":29,"nodeType":"180","messageId":"181","endLine":3,"endColumn":53},{"ruleId":"178","severity":1,"message":"198","line":45,"column":12,"nodeType":"180","messageId":"181","endLine":45,"endColumn":20},{"ruleId":"178","severity":1,"message":"199","line":45,"column":22,"nodeType":"180","messageId":"181","endLine":45,"endColumn":33},{"ruleId":"183","severity":1,"message":"200","line":59,"column":8,"nodeType":"185","endLine":59,"endColumn":10,"suggestions":"201"},{"ruleId":"178","severity":1,"message":"202","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":16},{"ruleId":"178","severity":1,"message":"203","line":4,"column":10,"nodeType":"180","messageId":"181","endLine":4,"endColumn":28},{"ruleId":"178","severity":1,"message":"204","line":4,"column":30,"nodeType":"180","messageId":"181","endLine":4,"endColumn":55},{"ruleId":"178","severity":1,"message":"205","line":12,"column":8,"nodeType":"180","messageId":"181","endLine":12,"endColumn":13},{"ruleId":"178","severity":1,"message":"206","line":46,"column":12,"nodeType":"180","messageId":"181","endLine":46,"endColumn":22},{"ruleId":"178","severity":1,"message":"207","line":46,"column":24,"nodeType":"180","messageId":"181","endLine":46,"endColumn":37},{"ruleId":"183","severity":1,"message":"208","line":61,"column":8,"nodeType":"185","endLine":61,"endColumn":10,"suggestions":"209"},{"ruleId":"178","severity":1,"message":"210","line":4,"column":10,"nodeType":"180","messageId":"181","endLine":4,"endColumn":15},{"ruleId":"183","severity":1,"message":"200","line":61,"column":8,"nodeType":"185","endLine":61,"endColumn":10,"suggestions":"211"},{"ruleId":"178","severity":1,"message":"212","line":63,"column":11,"nodeType":"180","messageId":"181","endLine":63,"endColumn":23},{"ruleId":"178","severity":1,"message":"213","line":32,"column":12,"nodeType":"180","messageId":"181","endLine":32,"endColumn":16},{"ruleId":"183","severity":1,"message":"214","line":41,"column":8,"nodeType":"185","endLine":41,"endColumn":15,"suggestions":"215"},{"ruleId":"178","severity":1,"message":"216","line":1,"column":10,"nodeType":"180","messageId":"181","endLine":1,"endColumn":24},{"ruleId":"178","severity":1,"message":"217","line":1,"column":26,"nodeType":"180","messageId":"181","endLine":1,"endColumn":38},{"ruleId":"178","severity":1,"message":"218","line":1,"column":40,"nodeType":"180","messageId":"181","endLine":1,"endColumn":53},{"ruleId":"178","severity":1,"message":"219","line":1,"column":55,"nodeType":"180","messageId":"181","endLine":1,"endColumn":70},{"ruleId":"178","severity":1,"message":"220","line":1,"column":72,"nodeType":"180","messageId":"181","endLine":1,"endColumn":85},{"ruleId":"221","severity":1,"message":"222","line":6,"column":5,"nodeType":"223","messageId":"224","endLine":37,"endColumn":6},{"ruleId":"225","severity":2,"message":"226","line":7,"column":14,"nodeType":"180","messageId":"227","endLine":7,"endColumn":25},{"ruleId":"225","severity":2,"message":"228","line":12,"column":17,"nodeType":"180","messageId":"227","endLine":12,"endColumn":22},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'addCategoryService' is defined but never used.","Identifier","unusedVar","'editCategoryService' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.","ArrayExpression",["231"],"'useCallback' is defined but never used.",["232"],"'addProductService' is defined but never used.","'editProductService' is defined but never used.","'setCategory' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["233"],"'image' is assigned a value but never used.",["234"],"'getProductService' is defined but never used.","'deleteProductServiceById' is defined but never used.","'products' is assigned a value but never used.","'setProducts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array. If 'fetchProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["235"],"'apiurl' is defined but never used.","'getCategoryService' is defined but never used.","'deleteCategoryServiceById' is defined but never used.","'axios' is defined but never used.","'categories' is assigned a value but never used.","'setCategories' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchCategories'. Either include it or remove the dependency array. If 'fetchCategories' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["236"],"'toast' is defined but never used.",["237"],"'loadProducts' is assigned a value but never used.","'cart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cartitem'. Either include it or remove the dependency array.",["238"],"'FETCH_PRODUCTS' is defined but never used.","'ADD_PRODUCTS' is defined but never used.","'EDIT_PRODUCTS' is defined but never used.","'DELETE_PRODUCTS' is defined but never used.","'LOAD_PRODUCTS' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-undef","'ADD_TO_CART' is not defined.","undef","'toast' is not defined.","no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"239","fix":"241"},{"desc":"242","fix":"243"},{"desc":"242","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"245","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [loadCategory]",{"range":"252","text":"253"},{"range":"254","text":"253"},"Update the dependencies array to be: [loadProduct]",{"range":"255","text":"256"},{"range":"257","text":"256"},"Update the dependencies array to be: [fetchProducts]",{"range":"258","text":"259"},"Update the dependencies array to be: [fetchCategories]",{"range":"260","text":"261"},{"range":"262","text":"259"},"Update the dependencies array to be: [cartitem, props]",{"range":"263","text":"264"},[1184,1186],"[loadCategory]",[428,430],[2609,2611],"[loadProduct]",[533,535],[1835,1837],"[fetchProducts]",[1952,1954],"[fetchCategories]",[1756,1758],[1239,1246],"[cartitem, props]"]